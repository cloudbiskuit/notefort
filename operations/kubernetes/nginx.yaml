apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx # The deployment name: The pod names will be generated by Kubernetes and will look something like nginx-<unique-id>.
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: public
                operator: In
                values:
                - "true"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nginx
        image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/notefort-nginx:${IMAGE_TAG}

        ports:
        - containerPort: 80

        resources:
          requests:
            cpu: "250m"      # 0.25 vCPU, minimal CPU load for serving static content
            memory: "256Mi"  # 256MB RAM, enough for small static content
          limits:
            cpu: "500m"      # 0.5 vCPU, allows for moderate traffic spikes
            memory: "512Mi"  # 512MB RAM, accounts for larger traffic bursts

        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer