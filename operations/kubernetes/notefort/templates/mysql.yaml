{{- range .Values.mysqlInstances }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .name }}
spec:
  serviceName: {{ .name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: private
                operator: In
                values:
                - "true"
      containers:
      - name: {{ .name }}
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: password
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "localhost"]
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: {{ .volumeClaim }}
          mountPath: /var/lib/mysql
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-script
        configMap:
          name: {{ .name }}-init-script
          
  volumeClaimTemplates:
  - metadata:
      name: {{ .volumeClaim }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: {{ .storageClass }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name }}-init-script
data:
  init.sql: |
{{ .initScript | indent 4 }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .storageClass }}
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp3
  fsType: ext4
  encrypted: "true"
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: {{ .name }}-vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: {{ .name }}
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: {{ .name }}
      minAllowed:
        cpu: "125m"
        memory: "128Mi"
      maxAllowed:
        cpu: "750m"
        memory: "640Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}
spec:
  selector:
    app: {{ .name }}
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
{{- end }}
