apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejsa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodejsa
  template:
    metadata:
      labels:
        app: nodejsa
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: private
                operator: In
                values:
                - "true"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nodejsa
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nodejsa
        image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/notefort-nodejsa:${IMAGE_TAG}
        ports:
        - containerPort: 4000

        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: DB_HOST
          value: "mysqla"
        - name: DB_NAME
          value: "mysqla"
        - name: DB_USER
          value: "root"

        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: password

        resources:
          requests:
            cpu: "250m"      # 0.25 vCPU, basic CPU needs
            memory: "256Mi"  # 256MB RAM, enough for small Node.js applications
          limits:
            cpu: "500m"      # 0.5 vCPU, allows for occasional spikes
            memory: "512Mi"  # 512MB of RAM, sufficient for moderate traffic and logic

        livenessProbe:
          tcpSocket:
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: nodejsa
spec:
  selector:
    app: nodejsa
  ports:
  - protocol: TCP
    port: 4000
    targetPort: 4000
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nodejsa-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nodejsa
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Pods
      pods:
        metric:
          name: http_requests_per_second
        target:
          type: AverageValue
          averageValue: "100"