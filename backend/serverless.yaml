service: backend

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  environment:
    AUTH0_DOMAIN: ${env:AUTH0_DOMAIN}   # Set in GitHub Actions Secrets
    AUTH0_API_IDENTIFIER: "https://temp-placeholder.com"   # Set in GitHub Actions Workflow

  iamRoleStatements:
    # Permissions for S3
    - Effect: Allow
      Action:
        - s3:CreateBucket
        - s3:DeleteBucket
        - s3:PutBucketTagging
        - s3:PutBucketPublicAccessBlock
        - s3:ListBucket
        - s3:ListBucketVersions
        - s3:GetBucketLocation
        - s3:DeleteObject
        - s3:DeleteObjectVersion
        - s3:GetObject
        - s3:PutObject
      Resource:
        - "arn:aws:s3:::notefort-state-*"
        - "arn:aws:s3:::notefort-state-*/*"

    # Permissions for DynamoDB
    - Effect: Allow
      Action:
        - dynamodb:CreateTable
        - dynamodb:DeleteTable
        - dynamodb:DescribeTable
        - dynamodb:ListTables
        - dynamodb:UpdateTable
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:Scan
      Resource:
        - "arn:aws:dynamodb:*:*:table/notefort-locks"

    # Permissions for SSM Parameter Store
    - Effect: Allow
      Action:
        - ssm:PutParameter
        - ssm:GetParameter
        - ssm:DeleteParameter
      Resource:
        - "arn:aws:ssm:*:*:parameter/notefort-bucket-name"

    # General logging permissions (optional but recommended)
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"
 
  httpApi:
    authorizers:
      Auth0Authorizer:
        identitySource: "$request.header.Authorization"
        issuerUrl: "https://${self:provider.environment.AUTH0_DOMAIN}/"
        audience:
          - ${self:provider.environment.AUTH0_API_IDENTIFIER}

functions:
  createBackendResources:
    handler: handler.create_backend_resources
    events:
      - httpApi:
          path: /create-backend
          method: post
          authorizer: Auth0Authorizer
    
  deleteBackendResources:
    handler: handler.delete_backend_resources
    events:
      - httpApi:
          path: /delete-backend
          method: post
          authorizer: Auth0Authorizer

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true


